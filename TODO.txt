
Build system features.
For VC/VC++ example: cl -I include -I libatomic_ops/src -Ox -DGC_THREADS -DTHREAD_LOCAL_ALLOC -DPARALLEL_MARK -c extra/gc.c


==============================================================
Implement C try / catch / finally (http://www.di.unipi.it/~nids/docs/longjump_try_trow_catch.html)

#include <stdio.h>
#include <setjmp.h>

jmp_buf __unhandledExceptionBuff;
jmp_buf __threadExceptionBuff;

#define TRY switch(setjmp(__threadExceptionBuff)) { case 0: while(1) {
#define CATCH(x) break; case x:
#define FINALLY break; } default: {
#define TRY_END memcpy_s(__threadExceptionBuff, sizeof(jmp_buf), __unhandledExceptionBuff, sizeof(jmp_buf)); break; } }
#define THROW(x) longjmp(__threadExceptionBuff, x)

#define EXCEPTION (1)
#define NOT_IMPLEMENTED_EXCEPTION (2)

void Foo()
{
	THROW(NOT_IMPLEMENTED_EXCEPTION);
}

void main()
{
	int result = setjmp(__unhandledExceptionBuff);
	if (result != 0)
	{
		printf("Catch Unhandled Exception\n");
		return;
	}

	TRY
	{
		printf("Start\n");
		Foo();
		printf("End\n");
	}
	CATCH (NOT_IMPLEMENTED_EXCEPTION)
	{
		printf("Catch Not Implemented Exception\n");
	}
	CATCH (EXCEPTION)
	{
		printf("Catch Exception\n");
	}
	FINALLY
	{
		printf("Finally\n");
	}
	TRY_END;

	THROW(EXCEPTION);
}

==============================================================
Implement Beohm GC

char* ptr = 0;
char* ptr2 = 0;
void main()
{
	CS2X_GC_Init();
	TestApp_C_Program_Main__0();
	ptr = CS2X_GC_New(sizeof(char) * 1024 * 1024 * 1024);
	ptr2 = CS2X_GC_New(sizeof(char) * 1024 * 1024 * 6);
	memset(ptr, 0, sizeof(char) * 1024 * 1024 * 1024);
	memset(ptr2, 0, sizeof(char) * 1024 * 1024 * 6);
	size_t size = GC_get_free_bytes();
	ptr = 0;
	ptr2 = 0;
	CS2X_GC_Collect();
	size_t size2 = GC_get_free_bytes();
	if (size == size2)
	{
		printf("Didn't remove memory");
		return;
	}
}